<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.23">
<title>Upgrade to v4</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/*! Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */
/* Uncomment the following line when using as a custom stylesheet */
/* @import "https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700"; */
html{font-family:sans-serif;-webkit-text-size-adjust:100%}
a{background:none}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
b,strong{font-weight:bold}
abbr{font-size:.9em}
abbr[title]{cursor:help;border-bottom:1px dotted #dddddf;text-decoration:none}
dfn{font-style:italic}
hr{height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
audio,video{display:inline-block}
audio:not([controls]){display:none;height:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=checkbox],input[type=radio]{padding:0}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,::before,::after{box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"Noto Serif","DejaVu Serif",serif;line-height:1;position:relative;cursor:auto;-moz-tab-size:4;-o-tab-size:4;tab-size:4;word-wrap:anywhere;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:0}
p{line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #dddddf;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight:400;color:rgba(0,0,0,.9)}
ul,ol,dl{line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}
ul,ol{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ul.square{list-style-type:square}
ul.circle ul:not([class]),ul.disc ul:not([class]),ul.square ul:not([class]){list-style:inherit}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:1px solid #dedede;word-wrap:normal}
table thead,table tfoot{background:#f7f8f7}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}
table tr.even,table tr.alt{background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.center{margin-left:auto;margin-right:auto}
.stretch{width:100%}
.clearfix::before,.clearfix::after,.float-group::before,.float-group::after{content:" ";display:table}
.clearfix::after,.float-group::after{clear:both}
:not(pre).nobreak{word-wrap:normal}
:not(pre).nowrap{white-space:nowrap}
:not(pre).pre-wrap{white-space:pre-wrap}
:not(pre):not([class^=L])>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background:#f7f7f8;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed}
pre{color:rgba(0,0,0,.9);font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;line-height:1.45;text-rendering:optimizeSpeed}
pre code,pre pre{color:inherit;font-size:inherit;line-height:inherit}
pre>code{display:block}
pre.nowrap,pre.nowrap pre{white-space:pre;word-wrap:normal}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background:#f7f7f7;border:1px solid #ccc;border-radius:3px;box-shadow:0 1px 0 rgba(0,0,0,.2),inset 0 0 0 .1em #fff;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menuref{color:#000}
.menuseq b:not(.caret),.menuref{font-weight:inherit}
.menuseq{word-spacing:-.02em}
.menuseq b.caret{font-size:1.25em;line-height:.8}
.menuseq i.caret{font-weight:bold;text-align:center;width:.45em}
b.button::before,b.button::after{position:relative;top:-1px;font-weight:400}
b.button::before{content:"[";padding:0 3px 0 2px}
b.button::after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin:0 auto;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}
#header::before,#header::after,#content::before,#content::after,#footnotes::before,#footnotes::after,#footer::before,#footer::after{content:" ";display:table}
#header::after,#content::after,#footnotes::after,#footer::after{clear:both}
#content{margin-top:1.25em}
#content::before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #dddddf}
#header>h1:only-child{border-bottom:1px solid #dddddf;padding-bottom:8px}
#header .details{border-bottom:1px solid #dddddf;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:flex;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span::before{content:"\00a0\2013\00a0"}
#header .details br+span.author::before{content:"\00a0\22c5\00a0";color:rgba(0,0,0,.85)}
#header .details br+span#revremark::before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber::after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #dddddf;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}
#toc{border-bottom:1px solid #e7e7e9;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:none}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #dddddf;padding-bottom:8px}
#toc.toc2{margin-top:0!important;background:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #e7e7e9;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e7e7e9;left:auto;right:0}}
@media screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border:1px solid #e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:none;background:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:hsla(0,0%,100%,.8);line-height:1.44}
#content{margin-bottom:.625em}
.sect1{padding-bottom:.625em}
@media screen and (min-width:768px){#content{margin-bottom:1.25em}
.sect1{padding-bottom:1.25em}}
.sect1:last-child{padding-bottom:0}
.sect1+.sect1{border-top:1px solid #e7e7e9}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor::before,h2>a.anchor::before,h3>a.anchor::before,#toctitle>a.anchor::before,.sidebarblock>.content>.title>a.anchor::before,h4>a.anchor::before,h5>a.anchor::before,h6>a.anchor::before{content:"\00A7";font-size:.85em;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}
details,.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}
details{margin-left:1.25rem}
details>summary{cursor:pointer;display:block;position:relative;line-height:1.6;margin-bottom:.625rem;outline:none;-webkit-tap-highlight-color:transparent}
details>summary::-webkit-details-marker{display:none}
details>summary::before{content:"";border:solid transparent;border-left:solid;border-width:.3em 0 .3em .5em;position:absolute;top:.5em;left:-1.25rem;transform:translateX(15%)}
details[open]>summary::before{border:solid transparent;border-top:solid;border-width:.5em .3em 0;transform:translateY(15%)}
details>summary::after{content:"";width:1.25rem;height:1em;position:absolute;top:.3em;left:-1.25rem}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1rem;font-style:italic}
table.tableblock.fit-content>caption.title{white-space:nowrap;width:0}
.paragraph.lead>p,#preamble>.sectionbody>[class=paragraph]:first-of-type p{font-size:1.21875em;line-height:1.6;color:rgba(0,0,0,.85)}
.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sans","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #dddddf;color:rgba(0,0,0,.6);word-wrap:anywhere}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border:1px solid #e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;border-radius:4px}
.sidebarblock{border:1px solid #dbdbd6;margin-bottom:1.25em;padding:1.25em;background:#f3f3f2;border-radius:4px}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:first-child,.sidebarblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child,.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}
.literalblock pre,.listingblock>.content>pre{border-radius:4px;overflow-x:auto;padding:1em;font-size:.8125em}
@media screen and (min-width:768px){.literalblock pre,.listingblock>.content>pre{font-size:.90625em}}
@media screen and (min-width:1280px){.literalblock pre,.listingblock>.content>pre{font-size:1em}}
.literalblock pre,.listingblock>.content>pre:not(.highlight),.listingblock>.content>pre[class=highlight],.listingblock>.content>pre[class^="highlight "]{background:#f7f7f8}
.literalblock.output pre{color:#f7f7f8;background:rgba(0,0,0,.9)}
.listingblock>.content{position:relative}
.listingblock code[data-lang]::before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:inherit;opacity:.5}
.listingblock:hover code[data-lang]::before{display:block}
.listingblock.terminal pre .command::before{content:attr(data-prompt);padding-right:.5em;color:inherit;opacity:.5}
.listingblock.terminal pre .command:not([data-prompt])::before{content:"$"}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;border-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.prettyprint{background:#f7f7f8}
pre.prettyprint .linenums{line-height:1.45;margin-left:2em}
pre.prettyprint li{background:none;list-style-type:inherit;padding-left:0}
pre.prettyprint li code[data-lang]::before{opacity:1}
pre.prettyprint li:not(:first-child) code[data-lang]::before{display:none}
table.linenotable{border-collapse:separate;border:0;margin-bottom:0;background:none}
table.linenotable td[class]{color:inherit;vertical-align:top;padding:0;line-height:inherit;white-space:normal}
table.linenotable td.code{padding-left:.75em}
table.linenotable td.linenos,pre.pygments .linenos{border-right:1px solid;opacity:.35;padding-right:.5em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}
pre.pygments span.linenos{display:inline-block;margin-right:.75em}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock:not(.excerpt)>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote::before{content:"\201c";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.75em;margin-right:.5ex;text-align:right}
.verseblock{margin:0 1em 1.25em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans-serif;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract blockquote::before,.quoteblock.excerpt blockquote::before,.quoteblock .quoteblock blockquote::before{display:none}
.quoteblock.abstract blockquote,.quoteblock.abstract p,.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{line-height:1.6;word-spacing:0}
.quoteblock.abstract{margin:0 1em 1.25em;display:block}
.quoteblock.abstract>.title{margin:0 0 .375em;font-size:1.15em;text-align:center}
.quoteblock.excerpt>blockquote,.quoteblock .quoteblock{padding:0 0 .25em 1em;border-left:.25em solid #dddddf}
.quoteblock.excerpt,.quoteblock .quoteblock{margin-left:0}
.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{color:inherit;font-size:1.0625rem}
.quoteblock.excerpt .attribution,.quoteblock .quoteblock .attribution{color:inherit;font-size:.85rem;text-align:left;margin-right:0}
p.tableblock:last-child{margin-bottom:0}
td.tableblock>.content{margin-bottom:1.25em;word-wrap:anywhere}
td.tableblock>.content>:last-child{margin-bottom:-1.25em}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all>*>tr>*{border-width:1px}
table.grid-cols>*>tr>*{border-width:0 1px}
table.grid-rows>*>tr>*{border-width:1px 0}
table.frame-all{border-width:1px}
table.frame-ends{border-width:1px 0}
table.frame-sides{border-width:0 1px}
table.frame-none>colgroup+*>:first-child>*,table.frame-sides>colgroup+*>:first-child>*{border-top-width:0}
table.frame-none>:last-child>:last-child>*,table.frame-sides>:last-child>:last-child>*{border-bottom-width:0}
table.frame-none>*>tr>:first-child,table.frame-ends>*>tr>:first-child{border-left-width:0}
table.frame-none>*>tr>:last-child,table.frame-ends>*>tr>:last-child{border-right-width:0}
table.stripes-all>*>tr,table.stripes-odd>*>tr:nth-of-type(odd),table.stripes-even>*>tr:nth-of-type(even),table.stripes-hover>*>tr:hover{background:#f8f8f7}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}
ul.checklist,ul.none,ol.none,ul.no-bullet,ol.no-bullet,ol.unnumbered,ul.unstyled,ol.unstyled{list-style-type:none}
ul.no-bullet,ol.no-bullet,ol.unnumbered{margin-left:.625em}
ul.unstyled,ol.unstyled{margin-left:0}
li>p:empty:only-child::before{content:"";display:inline-block}
ul.checklist>li>p:first-child{margin-left:-1em}
ul.checklist>li>p:first-child>.fa-square-o:first-child,ul.checklist>li>p:first-child>.fa-check-square-o:first-child{width:1.25em;font-size:.8em;position:relative;bottom:.125em}
ul.checklist>li>p:first-child>input[type=checkbox]:first-child{margin-right:.25em}
ul.inline{display:flex;flex-flow:row wrap;list-style:none;margin:0 0 .625em -1.25em}
ul.inline>li{margin-left:1.25em}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
td.hdlist2{word-wrap:anywhere}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist td:not([class]):first-child{padding:.4em .75em 0;line-height:1;vertical-align:top}
.colist td:not([class]):first-child img{max-width:none}
.colist td:not([class]):last-child{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:4px solid #fff;box-shadow:0 0 0 1px #ddd}
.imageblock.left{margin:.25em .625em 1.25em 0}
.imageblock.right{margin:.25em 0 1.25em .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active,#footnotes .footnote a:first-of-type:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em;border-width:1px 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none;margin-left:-1.05em}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background:#00fafa}
.black{color:#000}
.black-background{background:#000}
.blue{color:#0000bf}
.blue-background{background:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background:#fa00fa}
.gray{color:#606060}
.gray-background{background:#7d7d7d}
.green{color:#006000}
.green-background{background:#007d00}
.lime{color:#00bf00}
.lime-background{background:#00fa00}
.maroon{color:#600000}
.maroon-background{background:#7d0000}
.navy{color:#000060}
.navy-background{background:#00007d}
.olive{color:#606000}
.olive-background{background:#7d7d00}
.purple{color:#600060}
.purple-background{background:#7d007d}
.red{color:#bf0000}
.red-background{background:#fa0000}
.silver{color:#909090}
.silver-background{background:#bcbcbc}
.teal{color:#006060}
.teal-background{background:#007d7d}
.white{color:#bfbfbf}
.white-background{background:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background:#fafa00}
span.icon>.fa{cursor:default}
a span.icon>.fa{cursor:inherit}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note::before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip::before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning::before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution::before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important::before{content:"\f06a";color:#bf0000}
.conum[data-value]{display:inline-block;color:#fff!important;background:rgba(0,0,0,.8);border-radius:50%;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]::after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt,summary{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,td.hdlist1,span.alt,summary{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}
.exampleblock>.content{background:#fffef7;border-color:#e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@page{margin:1.25cm .75cm}
@media print{*{box-shadow:none!important;text-shadow:none!important}
html{font-size:80%}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^="#"],a[href^="mailto:"]{text-decoration:none!important}
a[href^="http:"]:not(.bare)::after,a[href^="https:"]:not(.bare)::after{content:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left:.25em}
abbr[title]{border-bottom:1px dotted}
abbr[title]::after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#header,#content,#footnotes,#footer{max-width:none}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #dddddf!important;padding-bottom:0!important}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em}
body.book #header .details{border:0!important;display:block;padding:0!important}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span::before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}
.listingblock code[data-lang]::before{display:block}
#footer{padding:0 .9375em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
@media amzn-kf8,print{#header>h1:first-child{margin-top:1.25rem}
.sect1{padding:0!important}
.sect1+.sect1{border:0}
#footer{background:none}
#footer-text{color:rgba(0,0,0,.6);font-size:.9em}}
@media amzn-kf8{#header,#content,#footnotes,#footer{padding:0}}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body class="article toc2 toc-right">
<div id="header">
<h1>Upgrade to v4</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#what">What</a>
<ul class="sectlevel2">
<li><a href="#graal_js">Graal.JS</a></li>
<li><a href="#typescript">TypeScript</a></li>
<li><a href="#react_18">React 18</a></li>
<li><a href="#target_folder_browser_cache">Target folder (browser cache)</a></li>
<li><a href="#named_exports">Named exports</a></li>
<li><a href="#clientrender_hydrate_ssr">clientRender (hydrate &amp; ssr)</a></li>
<li><a href="#globals_vs_externals">Globals vs Externals</a></li>
<li><a href="#lazy_loading_eager_removed">Lazy loading (eager removed)</a></li>
<li><a href="#application_configuration">Application configuration</a></li>
<li><a href="#multiple_react4xp_apps">Multiple React4xp apps</a></li>
<li><a href="#content_studio">Content Studio</a></li>
<li><a href="#gradle">Gradle</a></li>
<li><a href="#enonic_xp_dev_mode">Enonic XP dev mode</a></li>
<li><a href="#system_environment_variables">System environment variables</a></li>
<li><a href="#component_props_react4xpid">Component props (react4xpId)</a></li>
<li><a href="#document_polyfill">document polyfill</a></li>
</ul>
</li>
<li><a href="#how">How</a>
<ul class="sectlevel2">
<li><a href="#gradle_properties">gradle.properties</a></li>
<li><a href="#build_gradle">build.gradle</a></li>
<li><a href="#package_json">package.json</a></li>
<li><a href="#react4xp_config_js">react4xp.config.js</a></li>
<li><a href="#app_cfg">app.cfg</a></li>
<li><a href="#import">import/require in controllers</a></li>
<li><a href="#tsconfig_json">tsconfig.json</a></li>
<li><a href="#react4xp_components">React4xp components</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="content">
<div class="sect1">
<h2 id="what"><a class="link" href="#what">What</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="graal_js"><a class="link" href="#graal_js">Graal.JS</a></h3>
<div class="paragraph">
<p>We have dropped support for Nashorn in favour of Graal.JS.</p>
</div>
<div class="paragraph">
<p>This means we had to upgrade the Enonic XP version requirement to 7.12 (<a href="#gradle_properties">gradle.properties</a>)</p>
</div>
<div class="paragraph">
<p>Since the Application Configuration setting <code>react4xp.ssr.settings</code> was only relevant for Nashorn, it has been removed.</p>
</div>
<div class="paragraph">
<p>And since React4xp now only supports Graal.JS: the Application Configuration setting <code>react4xp.ssr.engineName</code> is no longer relevant.</p>
</div>
</div>
<div class="sect2">
<h3 id="typescript"><a class="link" href="#typescript">TypeScript</a></h3>
<div class="paragraph">
<p>React4xp version 4 introduces support for TypeScript</p>
</div>
<div class="paragraph">
<p>The types for lib-react4xp are available via npm:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://www.npmjs.com/package/@enonic-types/lib-react4xp" class="bare">https://www.npmjs.com/package/@enonic-types/lib-react4xp</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>See the <a href="#tsconfig_json">tsconfig.json</a> section below on how to set it up.</p>
</div>
</div>
<div class="sect2">
<h3 id="react_18"><a class="link" href="#react_18">React 18</a></h3>
<div class="paragraph">
<p>React4xp will now use the new React 18 functions like createRoot() and hydrateRoot() if they are available.</p>
</div>
<div class="paragraph">
<p>If they are not, it will use the React 17 functions like render() and hydrate().</p>
</div>
</div>
<div class="sect2">
<h3 id="target_folder_browser_cache"><a class="link" href="#target_folder_browser_cache">Target folder (browser cache)</a></h3>
<div class="paragraph">
<p>We have changed target folder from <code>build/resources/main/assets/react4xp</code> to
<code>build/resources/main/r4xAssets</code>. The React4xp assets are currently provided by
a service on top of lib-static and should not be available via assetUrl. When
building in production mode: the asset filenames contain contenthashes, so they
can be served as static assets with "infinite" browser caching. When building in
development mode, React4xp uses ETag.</p>
</div>
<div class="paragraph">
<p>We have not changed the source folder <code>src/main/resources/react4xp</code>, so you
don&#8217;t have to move any files.</p>
</div>
</div>
<div class="sect2">
<h3 id="named_exports"><a class="link" href="#named_exports">Named exports</a></h3>
<div class="paragraph">
<p>The default export from '/lib/enonic/react4xp' used to be a class.
Now we are using named exports.
You can still import the class exported under the name React4xp.</p>
</div>
<div class="paragraph">
<p>See <a href="#import">import/require in controllers</a></p>
</div>
</div>
<div class="sect2">
<h3 id="clientrender_hydrate_ssr"><a class="link" href="#clientrender_hydrate_ssr">clientRender (hydrate &amp; ssr)</a></h3>
<div class="paragraph">
<p>The clientRender option/parameter has been removed in favour of hydrate and ssr.</p>
</div>
<div class="paragraph">
<p>Read more under <a href="#application_configuration">Application configuration</a> and <a href="#react4xp_components">React4xp components</a></p>
</div>
</div>
<div class="sect2">
<h3 id="globals_vs_externals"><a class="link" href="#globals_vs_externals">Globals vs Externals</a></h3>
<div class="paragraph">
<p>We have added a new configuration option to PROJECT_DIR/react4xp.config.js
called <code>globals</code>. Whatever you had in <code>externals</code> should probably be moved to
<code>globals</code>.</p>
</div>
<div class="paragraph">
<p>React4xp builds a globals bundle, which MUST contain all assets NEEDED to render
server-side. By default it contains react and react-dom, but more assets can be
added.</p>
</div>
<div class="paragraph">
<p>By default the globals bundle is also used on the client-side, but you can
disable the serving of the globals bundle to the client-side in the Application
configuration and provide the REQUIRED assets on your own, for example via CDN.</p>
</div>
<div class="paragraph">
<p>It is possible to have pure client-side rendered components in React4xp.
If these components use assets which are NOT needed to render server-side you
should add them to <code>externals</code> and not <code>globals</code>. This way those assets will not
be bundled and must be provided by other means, for example via CDN.</p>
</div>
<table class="tableblock frame-all grid-all stretch">
<colgroup>
<col style="width: 20%;">
<col style="width: 40%;">
<col style="width: 40%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top"></th>
<th class="tableblock halign-left valign-top">Globals</th>
<th class="tableblock halign-left valign-top">Externals</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">What is it?</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">A javascript bundle of commonly required imports.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">A list of imports to be excluded.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Where is it used?</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Always server-side, and sometimes client-side.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Build-time to exclude files.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">How it works?</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Instead of bundling a copy of the global imports into every target file, they are put in a separate bundle, and the target files will only contain a require statement to the globals bundle. During runtime the globals bundle is loaded first so the imports can be accessed directly on the global namespace.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Your code will assume these imports are available in the global namespace, but unless you also load the imports first, your code will throw errors.</p></td>
</tr>
</tbody>
</table>
</div>
<div class="sect2">
<h3 id="lazy_loading_eager_removed"><a class="link" href="#lazy_loading_eager_removed">Lazy loading (eager removed)</a></h3>
<div class="paragraph">
<p>React4xp now supports pure clientSide rendered components. Such components may
include code that doesn&#8217;t run on the server. Since eager loading would load all
components, it would cause errors on the server (sometimes severe). Lazy loading
only loads the components needed for the current serverSide rendering, not
wasting cpu cycles on loading code it may never run.</p>
</div>
<div class="paragraph">
<p>Since lazy loading is now the default, and there is no eager loading anymore we
have also removed the <code>react4xp.ssrLazyload</code> setting from the application
configuration file (app.cfg)</p>
</div>
</div>
<div class="sect2">
<h3 id="application_configuration"><a class="link" href="#application_configuration">Application configuration</a></h3>
<div class="paragraph">
<p>We have added three new application configurations (hydrate, serveGlobals and
ssr), and removed a few ones too (ssr.engineName, ssr.lazyLoad and
ssr.settings).</p>
</div>
<div class="sect3">
<h4 id="react4xp_hydrate"><a class="link" href="#react4xp_hydrate">react4xp.hydrate</a></h4>
<div class="paragraph">
<p>Add this to to your application configuration file:</p>
</div>
<div class="listingblock">
<div class="title">${XP_HOME}/config/${app}.cfg</div>
<div class="content">
<pre class="highlight"><code>react4xp.hydrate = false</code></pre>
</div>
</div>
<div class="paragraph">
<p>To disable client-side hydration for all React4xp components (page, layout, parts, etc)</p>
</div>
<div class="paragraph">
<p>You can still override the application configuration in specific controllers.</p>
</div>
<div class="listingblock">
<div class="title">someController.ts</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">  render(compnent, props, request, {
      // Default is to use application configuration
      // SSR without hydration will always be enforced when request.mode === 'edit'
      // hydrate: true // Hydration when ssr = true
      // hydrate: false // No hydration even when ssr = true
  })</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="react4xp_serveglobals"><a class="link" href="#react4xp_serveglobals">react4xp.serveGlobals</a></h4>
<div class="paragraph">
<p>To disable serving the globals bundle to the client-side add the line below to
your application configuration file:</p>
</div>
<div class="listingblock">
<div class="title">${XP_HOME}/config/${app}.cfg</div>
<div class="content">
<pre class="highlight"><code>react4xp.serveGlobals = false</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="react4xp_ssr"><a class="link" href="#react4xp_ssr">react4xp.ssr</a></h4>
<div class="paragraph">
<p>Add this to your application configuration file:</p>
</div>
<div class="listingblock">
<div class="title">${XP_HOME}/config/${app}.cfg</div>
<div class="content">
<pre class="highlight"><code>react4xp.ssr = false</code></pre>
</div>
</div>
<div class="paragraph">
<p>To disable server-side rendering for all parts (doesn&#8217;t affect page and layouts)</p>
</div>
<div class="paragraph">
<p>You can still override the application configuration in specific part controllers.</p>
</div>
<div class="listingblock">
<div class="title">partController.ts</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">  render(compnent, props, request, {
      // Default is to use application configuration
      // SSR without hydration will always be enforced when request.mode === 'edit'
      // ssr: true // "Always" SSR
      // ssr: false // "Always" client-side rendering
  })</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="react4xp_ssr_lazyload"><a class="link" href="#react4xp_ssr_lazyload">react4xp.ssr.lazyLoad</a></h4>
<div class="paragraph">
<p>Lazyloading is now always enabled.</p>
</div>
<div class="paragraph">
<p>Therefore this setting has been removed.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="multiple_react4xp_apps"><a class="link" href="#multiple_react4xp_apps">Multiple React4xp apps</a></h3>
<div class="paragraph">
<p>You can now use components from multiple React4xp apps on the same webpage.</p>
</div>
<div class="admonitionblock important">
<table>
<tr>
<td class="icon">
<i class="fa icon-important" title="Important"></i>
</td>
<td class="content">
<div class="paragraph">
<p>By default React4xp apps serve a globals bundle to the browser.
This globals bundle contain react (and more).
If multiple copies of react are loaded in the browser, you will probably run into problems:</p>
</div>
<div class="paragraph">
<p><a href="https://legacy.reactjs.org/docs/error-decoder.html/?invariant=321" class="bare">https://legacy.reactjs.org/docs/error-decoder.html/?invariant=321</a>
<a href="https://react.dev/warnings/invalid-hook-call-warning#duplicate-react" class="bare">https://react.dev/warnings/invalid-hook-call-warning#duplicate-react</a></p>
</div>
<div class="paragraph">
<p>Luckily there is a workaround:</p>
</div>
<div class="paragraph">
<p>You can use Application Configuration to disable the serving of the globals bundle.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-${XP_HOME}/config/${app}.cfg" data-lang="${XP_HOME}/config/${app}.cfg">react4xp.serveGlobals = false</code></pre>
</div>
</div>
<div class="paragraph">
<p>The challenge then is that you have to provide globals (including react and react-dom) manually. Either using the assets folder, lib-static or from CDN.</p>
</div>
<div class="paragraph">
<p>You could let one of the apps keep react4xp.serveGlobals = true, but then you would have to use a component from that app on any page that uses components from any of the react4xp apps.</p>
</div>
<div class="paragraph">
<p>We are working on a better solution for this complexity.</p>
</div>
</td>
</tr>
</table>
</div>
<div class="sect3">
<h4 id="client_executor"><a class="link" href="#client_executor">Client &amp; Executor</a></h4>
<div class="paragraph">
<p>To enable multiple React4xp applications on the same page global variables has
been prefixed with the application name. Obviously the application name is not
available when bulding lib-react4xp, so the building of the client and executor
has been moved from lib-react4xp to @enonic/react4xp.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="content_studio"><a class="link" href="#content_studio">Content Studio</a></h3>
<div class="paragraph">
<p>SSR without hydration used to be enforced for both <code>edit</code> and <code>inline</code> mode in Content Studio.</p>
</div>
<div class="paragraph">
<p>Now React4xp will only enforce SSR without hydration in Content Studio <code>edit</code> mode.</p>
</div>
<div class="paragraph">
<p><code>inline</code> mode will use normal React4xp rendering, just as <code>preview</code> and <code>live</code> mode.</p>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
If you don&#8217;t pass on the request to the render functions React4xp will assume <code>edit</code> mode.
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="gradle"><a class="link" href="#gradle">Gradle</a></h3>
<div class="paragraph">
<p>We have simplified the gradle setup a lot.</p>
</div>
<div class="paragraph">
<p>All old references to React4xp in the build.gradle file, must be removed.</p>
</div>
<div class="paragraph">
<p>These files no longer exist:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>node_modules/@enonic/react4xp/react4xp.gradle</p>
</li>
<li>
<p>node_modules/@enonic/react4xp/npmInstall.gradle</p>
</li>
<li>
<p>node_modules/@enonic/react4xp/updaters.gradle</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>See more under the <a href="#_build_gradle">build.gradle</a> section below.</p>
</div>
</div>
<div class="sect2">
<h3 id="enonic_xp_dev_mode"><a class="link" href="#enonic_xp_dev_mode">Enonic XP dev mode</a></h3>
<div class="paragraph">
<p>When running Enonic XP in dev mode, it may be faster to build without using gradle at all.</p>
</div>
<div class="paragraph">
<p>See the required changes to the build.gradle and package.json files in the How section below.</p>
</div>
</div>
<div class="sect2">
<h3 id="system_environment_variables"><a class="link" href="#system_environment_variables">System environment variables</a></h3>
<div class="paragraph">
<p>When building with gradle, it will automatically set some system environment variables for you.</p>
</div>
<div class="paragraph">
<p>However if you want to build without using gradle you have to set them up on your own.</p>
</div>
<div class="paragraph">
<p>These two are required:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>R4X_APP_NAME (find the appName in gradle.properties)</p>
</li>
<li>
<p>R4X_DIR_PATH_ABSOLUTE_PROJECT (cwd/pwd)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>These two are optional:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>R4X_BUILD_LOG_LEVEL (use INFO to get some extra logging when building)</p>
</li>
<li>
<p>NODE_ENV (the default is production, set it to development for no hashing, nor minification, etc&#8230;&#8203;)</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="component_props_react4xpid"><a class="link" href="#component_props_react4xpid">Component props (react4xpId)</a></h3>
<div class="paragraph">
<p>React4xp used to add an extra prop called react4xpId, which was used during
clientSide hydration and rendering. This prop is no longer needed as it is
provided by other means (<code>script[data-react4xp-ref]</code>).</p>
</div>
<div class="paragraph">
<p>So now: React component props are just normal React component props :)</p>
</div>
</div>
<div class="sect2">
<h3 id="document_polyfill"><a class="link" href="#document_polyfill">document polyfill</a></h3>
<div class="paragraph">
<p>Several frameworks and node modules uses <code>document</code> to determine whether it&#8217;s code
is running on the server, or in the browser. By polyfilling <code>document</code> that
logic is broken. So React4xp is no longer polyfilling <code>document</code>.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
If your code is using <code>document</code>, and is not a pure client-side component:
you should wrap the code with an if block to avoid that code being run on the
server.
</td>
</tr>
</table>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
If you are importing some "broken" module that uses <code>document</code> without
checking for client or server, you may polyfill <code>document</code> on your own, but it
might break other modules which now thinks the server is the client&#8230;&#8203;
</td>
</tr>
</table>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="how"><a class="link" href="#how">How</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="gradle_properties"><a class="link" href="#gradle_properties">gradle.properties</a></h3>
<div class="paragraph">
<p>Set xpVersion to 7.12.0 or higher:</p>
</div>
<div class="listingblock">
<div class="title">gradle.properties</div>
<div class="content">
<pre class="highlight"><code class="language-properties" data-lang="properties">xpVersion = 7.12.0</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="build_gradle"><a class="link" href="#build_gradle">build.gradle</a></h3>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">dependencies {
    include "com.enonic.lib:lib-react4xp:4.x.x"
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Remove all the old react4xp* tasks from your build.gradle file.</p>
</div>
<div class="paragraph">
<p>Add this one task instead:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">task react4xp(type: NpmTask, dependsOn: npmInstall) {
  args = [
    'run',
    'build:react4xp' // This script must exist in the package.json file
  ]
  description 'Compile React4xp resources'
  environment = [
    'R4X_APP_NAME': "${appName}",
    'R4X_BUILD_LOG_LEVEL': gradle.startParameter.logLevel.toString(),
    'R4X_DIR_PATH_ABSOLUTE_PROJECT': project.projectDir.toString(),
    'NODE_ENV': project.hasProperty('dev') || project.hasProperty('development') ? 'development' : 'production'
  ]
  group 'react4xp'
  // It also watches package.json and package-lock.json :)
  inputs.dir 'node_modules/@enonic/react4xp'
  inputs.dir 'src/main/resources'
  outputs.dir 'build/resources/main'
}
jar.dependsOn 'react4xp'</code></pre>
</div>
</div>
<div class="paragraph">
<p>If your project is based on an earlier version of the starter-react4xp also remove the <code>react4xp</code> plugin:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle</div>
<div class="content">
<pre class="highlight"><code class="language-gradle" data-lang="gradle">plugins {
  id 'react4xp' // Delete this line
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can probably also delete the entire buildSrc folder from your project.</p>
</div>
</div>
<div class="sect2">
<h3 id="package_json"><a class="link" href="#package_json">package.json</a></h3>
<div class="paragraph">
<p>When runnning Enonic XP in dev mode, it&#8217;s possible to build without using gradle.</p>
</div>
<div class="paragraph">
<p>In order to build without gradle we had to move npm explore command from build.gradle to the package.json file:</p>
</div>
<div class="listingblock">
<div class="title">package.json</div>
<div class="content">
<pre class="highlight"><code class="language-json" data-lang="json">{
  "scripts": {
    "build:react4xp": "npm explore @enonic/react4xp -- npm run build:react4xp",
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Install or upgrade the React4xp build system:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">npm install --save-dev @enonic/react4xp</code></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">npm upgrade @enonic/react4xp</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="react4xp_config_js"><a class="link" href="#react4xp_config_js">react4xp.config.js</a></h3>
<div class="listingblock">
<div class="title">react4xp.config.js</div>
<div class="content">
<pre class="highlight"><code class="language-javacript" data-lang="javacript">  // Used in ssr component(s)
  globals: {
    lodash: '_'
  },
  // Used in pure clientSide component(s).
  // Must be provided by other means, for example CDN.
  externals: {
    jquery: 'jQuery'
  },</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="app_cfg"><a class="link" href="#app_cfg">app.cfg</a></h3>
<div class="paragraph">
<p>Hydration is enabled by default, to change the default to disabled add the line
below to ${XP_HOME}/config/${app}.cfg. One can still enable hydration in
specific components.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-${XP_HOME}/config/${app}.cfg" data-lang="${XP_HOME}/config/${app}.cfg">react4xp.hydrate = false</code></pre>
</div>
</div>
<div class="paragraph">
<p>SSR is enabled by default, to change the default to disabled add the line below
to ${XP_HOME}/config/${app}.cfg. One can still enable ssr in specific
components.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-${XP_HOME}/config/${app}.cfg" data-lang="${XP_HOME}/config/${app}.cfg">react4xp.ssr = false</code></pre>
</div>
</div>
<div class="paragraph">
<p>To disable serving the globals bundle to the client-side add the line below to
${XP_HOME}/config/${app}.cfg.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-${XP_HOME}/config/${app}.cfg" data-lang="${XP_HOME}/config/${app}.cfg">react4xp.serveGlobals = false</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="import"><a class="link" href="#import">import/require in controllers</a></h3>
<div class="sect3">
<h4 id="typescript_named_function"><a class="link" href="#typescript_named_function">TypeScript named function</a></h4>
<div class="listingblock">
<div class="title">examplePart.ts</div>
<div class="content">
<pre class="highlight"><code class="language-typecript" data-lang="typecript">import {render} from '/lib/enonic/react4xp';

export function get(request) {
    return render(component, props, request, {
      // Optional
      // hydrate: false,
      // ssr: false
    });
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="typescript_class"><a class="link" href="#typescript_class">TypeScript class</a></h4>
<div class="listingblock">
<div class="title">examplePart.ts</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">import {React4xp} from '/lib/enonic/react4xp';

export function get(request) {
  const r4x = new React4xp(jsxPath);
  r4x.setId(id);
  r4x.setProps(props);
  return {
    body: r4x.renderBody({
      body,
      request,
      // ssr, // Optional
    }),
    pageContributions: r4x.renderPageContributions({
      // hydrate, // Optional
      pageContributions,
      request,
      // ssr, // Optional
    })
  };
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="common_js_named_function"><a class="link" href="#common_js_named_function">Common.JS "named" function</a></h4>
<div class="listingblock">
<div class="title">examplePart.js</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">const libReact4xp = require('/lib/enonic/react4xp');

exports.get = function (request) {
    return libReact4xp.render(component, props, request, {
      // Optional
      // hydrate: false,
      // ssr: false
    });
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="common_js_class"><a class="link" href="#common_js_class">Common.JS class</a></h4>
<div class="listingblock">
<div class="title">examplePart.js</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">const libReact4xp = require('/lib/enonic/react4xp');

exports.get = function (request) {
    const r4x = new libReact4xp.React4xp(jsxPath);
    r4x.setId(id);
    r4x.setProps(props);
    return {
      body: r4x.renderBody({
        body: body,
        request: request,
        // ssr: ssr, // Optional
      }),
      pageContributions: r4x.renderPageContributions({
        // hydrate: hydrate, // Optional
        pageContributions: pageContributions,
        request: request,
        // ssr: ssr, // Optional
      })
    };
}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="tsconfig_json"><a class="link" href="#tsconfig_json">tsconfig.json</a></h3>
<div class="sect3">
<h4 id="typechecking_for_your_code_editor_tsconfig_json"><a class="link" href="#typechecking_for_your_code_editor_tsconfig_json">TypeChecking for your code editor (tsconfig.json)</a></h4>
<div class="paragraph">
<p>Install some types:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">npm install --save-dev @enonic-types/lib-react4xp @types/react</code></pre>
</div>
</div>
<div class="paragraph">
<p>You probably also want some of these:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">npm install --save-dev @enonic-types/lib-admin @enonic-types/lib-app @enonic-types/lib-auditlog @enonic-types/lib-auth @enonic-types/lib-cluster @enonic-types/lib-common @enonic-types/lib-content @enonic-types/lib-context @enonic-types/lib-event @enonic-types/lib-export @enonic-types/lib-grid @enonic-types/lib-i18n @enonic-types/lib-io @enonic-types/lib-mail @enonic-types/lib-node @enonic-types/lib-portal @enonic-types/lib-project @enonic-types/lib-repo @enonic-types/lib-scheduler @enonic-types/lib-schema @enonic-types/lib-task @enonic-types/lib-value @enonic-types/lib-vhost @enonic-types/lib-websocket</code></pre>
</div>
</div>
<div class="paragraph">
<p>Then create or edit a tsconfig.json file:</p>
</div>
<div class="listingblock">
<div class="title">tsconfig.json</div>
<div class="content">
<pre class="highlight"><code class="language-json" data-lang="json">{
    "compilerOptions": {
        "jsx": "react",
        "lib": [
            "DOM", // The server doesn't supports DOM, beeing permissive
            "ES2015",
        ],
        "moduleResolution": "node",
        "paths": {
          "/lib/enonic/react4xp": ["node_modules/@enonic-types/lib-react4xp"],
          "/lib/xp/*": ["node_modules/@enonic-types/lib-*"],
          "/*": ["src/main/resources/*"],
        },
        "skipLibCheck": true,
        "target": "ES2015",
        "typeRoots": [
          "node_modules/@types",
          "node_modules/@enonic-types"
        ]
    },
    "include": [
        "./src/main/resources/**/*.ts",
        "./src/main/resources/**/*.tsx"
    ],
}</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="typechecking_for_react4xp_code_tsconfig_react4xp_json"><a class="link" href="#typechecking_for_react4xp_code_tsconfig_react4xp_json">TypeChecking for React4xp code (tsconfig.react4xp.json)</a></h4>
<div class="paragraph">
<p>First install the typescript compiler, needed to run typecheking:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">npm install --save-dev typescript</code></pre>
</div>
</div>
<div class="paragraph">
<p>Then created a tsconfig.react4xp.json file:</p>
</div>
<div class="listingblock">
<div class="title">tsconfig.react4xp.json</div>
<div class="content">
<pre class="highlight"><code class="language-json" data-lang="json">{
    "compilerOptions": {
        "jsx": "react",
        "lib": [
            "DOM",
            "ES2015",
        ],
        "moduleResolution": "node",
        "paths": {
          "/lib/enonic/react4xp": ["node_modules/@enonic-types/lib-react4xp"],
          "/*": ["src/main/resources/*"],
        },
        "skipLibCheck": true,
        "target": "ES2015",
        "typeRoots": [
          "node_modules/@types",
          "node_modules/@enonic-types"
        ]
    },
    "include": [
        "./src/main/resources/**/*.tsx"
    ],
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>And finally add a script to your package.json file:</p>
</div>
<div class="listingblock">
<div class="title">package.json</div>
<div class="content">
<pre class="highlight"><code class="language-json" data-lang="json">  "scripts": {
    "verify:types:react4xp": "npx tsc --noEmit -p tsconfig.react4xp.json"
  }</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can now check the types of your React4xp files with this command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">npm run verify:types:react4xp</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="react4xp_components"><a class="link" href="#react4xp_components">React4xp components</a></h3>
<div class="paragraph">
<p>You may want to convert your React components from EcmaScript to TypeScript.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">git mv Component.jsx Component.tsx</code></pre>
</div>
</div>
<div class="paragraph">
<p>On mac this should rename all jsx files under src/main/resources</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">for filePath in $(find src/main/resources -iname "*.jsx"); do git mv $filePath "$(echo $filePath | rev | cut -d '.' -f 2- | rev).tsx"; done</code></pre>
</div>
</div>
<div class="paragraph">
<p>Start adding types for parameters, etc.</p>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2025-05-23 08:19:55 UTC
</div>
</div>
</body>
</html>